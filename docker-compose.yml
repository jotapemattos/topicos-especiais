version: '3.8'
services:
  postgres:
    image: postgres:latest
    deploy:
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: clinica-medica 
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - clinica-medica-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: notjotape/clinica-medica-api:v0.2
    deploy: 
      replicas: 3
    ports:
      - "3333:3333"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/clinica-medica?schema=public
      - NODE_ENV=production
      - JWT_SECRET=clinica-medica
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - postgres
    networks:
      - clinica-medica-network
  
  frontend:
    image: notjotape/clinica-medica-front:v0
    deploy: 
      replicas: 3
    ports:
      - "3000:3000"
    networks:
      - clinica-medica-network
  
  visualizer:
    image: dockersamples/visualizer:latest
    ports: 
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - clinica-medica-network

volumes:
  postgres_data:

networks:
  clinica-medica-network:
    driver: overlay